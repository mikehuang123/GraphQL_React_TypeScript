{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mikeh\\\\Desktop\\\\WORK\\\\JS_GraphQL\\\\client\\\\src\\\\Componets\\\\ListOfGame.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { GET_ALL_GAMES } from '../Graphql/Queries';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListOfGame() {\n  _s();\n\n  const {\n    data,\n    error\n  } = useQuery(GET_ALL_GAMES); // if(data){\n  //     console.log(data);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.getAllGames.map(game => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children:\n        /*#__PURE__*/\n\n        /* <table>\r\n           <tr>\r\n               <th>Title</th>\r\n               <th>Publisher</th>\r\n               <th>Description</th>\r\n           </tr>\r\n           <tr>\r\n               <td>{game.title}</td>\r\n               <td>{game.publisher}</td>\r\n               <td>{game.description}</td>\r\n           </tr>\r\n        </table> */\n        _jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 650\n            },\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Publisher\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListOfGame, \"pzN3/EAFUl6AOixROxgjKEqXHQo=\", false, function () {\n  return [useQuery];\n});\n\n_c = ListOfGame;\nexport default ListOfGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfGame\");","map":{"version":3,"sources":["C:/Users/mikeh/Desktop/WORK/JS_GraphQL/client/src/Componets/ListOfGame.tsx"],"names":["useQuery","React","GET_ALL_GAMES","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ListOfGame","data","error","getAllGames","map","game","minWidth","rows","row","border","name","calories","fat","carbs","protein"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBZ,QAAQ,CAACE,aAAD,CAA9B,CADkB,CAElB;AACA;AACA;;AACA,sBACI;AAAA,cAEKS,IAAI,IACJA,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAsBC,IAAD,IAAY;AAC9B,0BAAO;AAAA;AAAA;;AACE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwB,gBAAC,cAAD;AAAgB,UAAA,SAAS,EAAEN,KAA3B;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE;AAAEO,cAAAA,QAAQ,EAAE;AAAZ,aAAX;AAA8B,0BAAW,cAAzC;AAAA,oCACI,QAAC,SAAD;AAAA,qCACA,QAAC,QAAD;AAAA,wCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,SAAD;AAAA,wBACCC,IAAI,CAACH,GAAL,CAAUI,GAAD,iBACN,QAAC,QAAD;AAEA,gBAAA,EAAE,EAAE;AAAE,sDAAoC;AAAEC,oBAAAA,MAAM,EAAE;AAAV;AAAtC,iBAFJ;AAAA,wCAIA,QAAC,SAAD;AAAW,kBAAA,SAAS,EAAC,IAArB;AAA0B,kBAAA,KAAK,EAAC,KAAhC;AAAA,4BACKD,GAAG,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,wBAJA,eAOA,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BF,GAAG,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAPA,eAQA,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BH,GAAG,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,wBARA,eASA,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BJ,GAAG,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,wBATA,eAUA,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BL,GAAG,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAVA;AAAA,iBACKN,GAAG,CAACE,IADT;AAAA;AAAA;AAAA;AAAA,sBADH;AADD;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAbD;AAAA;AAAA;AAAA;AAAA,cAAP;AA0CH,KA3CA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH;;GAxDQV,U;UACiBV,Q;;;KADjBU,U;AA0DT,eAAeA,UAAf","sourcesContent":["import { useQuery } from '@apollo/client'\r\nimport React from 'react'\r\nimport {GET_ALL_GAMES} from '../Graphql/Queries' \r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n\r\nfunction ListOfGame() {\r\n    const {data, error} = useQuery(GET_ALL_GAMES);\r\n    // if(data){\r\n    //     console.log(data);\r\n    // }\r\n    return (\r\n        <div>\r\n            \r\n            {data &&\r\n            (data.getAllGames.map((game:any)=>{\r\n                return <div>\r\n                        {/* <table>\r\n                            <tr>\r\n                                <th>Title</th>\r\n                                <th>Publisher</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{game.title}</td>\r\n                                <td>{game.publisher}</td>\r\n                                <td>{game.description}</td>\r\n                            </tr>\r\n                        </table> */\r\n                        <TableContainer component={Paper}>\r\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Title</TableCell>\r\n                                    <TableCell align=\"right\">Publisher</TableCell>\r\n                                    <TableCell align=\"right\">Description</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow\r\n                                    key={row.name}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    >\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                    <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                    <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        }\r\n                    </div>\r\n            }))}\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfGame\r\n"]},"metadata":{},"sourceType":"module"}